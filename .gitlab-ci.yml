
stages:          # List of stages for jobs, and their order of execution
  - install_tools
  - test
  - security
  - build
  - docker

install_mvn_trivy_docker_kubectl:       # This job runs in the build stage, which runs first.
  stage: install_tools
  script:
    - mvn --version
    - java --version
    - trivy version
    - docker version
  tags:
    - self-hosted

unit_testing:
  stage: test
  script:
    - mvn clean test
  tags:
    - self-hosted

trivy_fs_scan:
  stage: security
  script:
    - trivy fs --format table -o fileSystem.html .
  artifacts:
    paths:
      - fileSystem.html
  tags:
    - self-hosted

sonarqube-check:
  stage: security
    # image: 
    # name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  tags:
    - self-hosted
  allow_failure: true
  only:
    - main

build_app:
  stage: build
  script:
    - mvn package
  tags:
    - self-hosted
  only:
    - main

build_and_tag_push_image:
  stage: docker
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - mvn package
    - mvn spring-boot:build-image -Dspring-boot.build-image.imageName=optimiste/test-driven-development:1.0.0 
    - docker push optimiste/test-driven-development:1.0.0
  tags:
    - self-hosted
  only:
    - main

trivy_image_scan:
  stage: security
  script:
    - trivy image -f json -o results.json --severity HIGH,CRITICAL optimiste/test-driven-development:1.0.0
    - dockle optimiste/test-driven-development:1.0.0  
  artifacts:
    paths:
      - results.json
  tags:
    - self-hosted
      
